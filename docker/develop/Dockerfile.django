FROM python:3.8.5-alpine3.12

# - build-base for compiler etc.
# - postgresql-dev for postgres support
# - libxslt for lxml package
# - libffi for argon2 hashing support
# - nodejs for building js
# - npm for installing yarn (easiest to install via npm)
# - libnotify because some npm packages we use requires it
# - cairo-dev and pango-dev for weasyprint python package
# - jpeg-dev zlib-dev freetype-dev lcms2-dev openjpeg-dev tiff-dev harfbuzz-dev fribidi-dev
#   for Pillow
RUN apk update && apk add \
    wget gcc build-base postgresql-dev musl-dev \
    libffi-dev libxslt-dev \
    libc-dev linux-headers psutils py3-psutil \
    ## gdal geos
    gdal-dev geos-dev \
    ## For building node modules
    nodejs-current npm libnotify git openssh-client sassc \
    ## For building pillow
    jpeg-dev zlib-dev freetype-dev lcms2-dev openjpeg-dev tiff-dev harfbuzz-dev fribidi-dev \
    bash


RUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub && \
    wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.31-r0/glibc-2.31-r0.apk && \
    apk add glibc-2.31-r0.apk

RUN pip install psutil
RUN pip install pipenv
RUN pip install twine

# Install yarn
RUN npm install --global yarn

# Setup app root
ENV APP_ROOT_PATH /usr/src/app
RUN mkdir -p $APP_ROOT_PATH
WORKDIR $APP_ROOT_PATH

# Specify the port we expose, and how to signal stopserver
EXPOSE 8000
STOPSIGNAL SIGINT

# Starts Redis and Postgres, and keep the docker container running (does not start the webserver).
ENTRYPOINT ["/bin/sh", "./docker/develop/entrypoint.sh" ]
